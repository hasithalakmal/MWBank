package BankServer;


/**
* BankServer/bankPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from bank.idl
* Tuesday, April 21, 2015 3:28:51 PM IST
*/

public abstract class bankPOA extends org.omg.PortableServer.Servant
 implements BankServer.bankOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("signIn", new java.lang.Integer (0));
    _methods.put ("getAccounts", new java.lang.Integer (1));
    _methods.put ("getBalance", new java.lang.Integer (2));
    _methods.put ("deposit", new java.lang.Integer (3));
    _methods.put ("withdraw", new java.lang.Integer (4));
    _methods.put ("getInfo", new java.lang.Integer (5));
    _methods.put ("addUser", new java.lang.Integer (6));
    _methods.put ("addAccount", new java.lang.Integer (7));
    _methods.put ("getAccountList", new java.lang.Integer (8));
    _methods.put ("shutdown", new java.lang.Integer (9));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // BankServer/bank/signIn
       {
         String userid = in.read_string ();
         String password = in.read_string ();
         String $result = null;
         $result = this.signIn (userid, password);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // BankServer/bank/getAccounts
       {
         String accnum = in.read_string ();
         String $result = null;
         $result = this.getAccounts (accnum);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // BankServer/bank/getBalance
       {
         String account = in.read_string ();
         double $result = (double)0;
         $result = this.getBalance (account);
         out = $rh.createReply();
         out.write_double ($result);
         break;
       }

       case 3:  // BankServer/bank/deposit
       {
         String account = in.read_string ();
         String amount = in.read_string ();
         String userid = in.read_string ();
         String $result = null;
         $result = this.deposit (account, amount, userid);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // BankServer/bank/withdraw
       {
         String account = in.read_string ();
         String amount = in.read_string ();
         String userid = in.read_string ();
         String $result = null;
         $result = this.withdraw (account, amount, userid);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // BankServer/bank/getInfo
       {
         String userid = in.read_string ();
         String $result = null;
         $result = this.getInfo (userid);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // BankServer/bank/addUser
       {
         String userid = in.read_string ();
         String username = in.read_string ();
         String mobile = in.read_string ();
         String adress = in.read_string ();
         String email = in.read_string ();
         String usertype = in.read_string ();
         String $result = null;
         $result = this.addUser (userid, username, mobile, adress, email, usertype);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 7:  // BankServer/bank/addAccount
       {
         String userid = in.read_string ();
         String accNo = in.read_string ();
         String initDeposit = in.read_string ();
         String accType = in.read_string ();
         String $result = null;
         $result = this.addAccount (userid, accNo, initDeposit, accType);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // BankServer/bank/getAccountList
       {
         String userid = in.read_string ();
         String $result = null;
         $result = this.getAccountList (userid);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 9:  // BankServer/bank/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:BankServer/bank:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public bank _this() 
  {
    return bankHelper.narrow(
    super._this_object());
  }

  public bank _this(org.omg.CORBA.ORB orb) 
  {
    return bankHelper.narrow(
    super._this_object(orb));
  }


} // class bankPOA
